openapi: 3.0.0
info:
  title: NanoMon API Service
  version: '2024-10-17'
  description: The REST API for managing and using NanoMon
tags:
  - name: Monitors
  - name: Results
paths:
  /api/monitors:
    get:
      operationId: MonitorAPI_list
      description: List all monitors. Doesn't require authentication
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
      tags:
        - Monitors
    post:
      operationId: MonitorAPI_create
      description: Create a new monitor
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Monitors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
    delete:
      operationId: MonitorAPI_deleteAll
      description: Delete all monitors
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      tags:
        - Monitors
  /api/monitors/import:
    post:
      operationId: MonitorAPI_importMonitors
      description: Import configuration from a JSON file
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
      tags:
        - Monitors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Monitor'
  /api/monitors/{id}:
    get:
      operationId: MonitorAPI_get
      description: Get a monitor by ID. Doesn't require authentication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Monitors
    post:
      operationId: MonitorAPI_update
      description: Update a single monitor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Monitors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
    delete:
      operationId: MonitorAPI_delete
      description: Delete a monitor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Monitors
  /api/monitors/{id}/results:
    get:
      operationId: MonitorAPI_getResults
      description: List *Results* for a single monitor. Doesn't require authentication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Monitors
  /api/results:
    get:
      operationId: ResultsAPI_getResults
      description: List *Results* for ALL monitors. Doesn't require authentication
      parameters:
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
      tags:
        - Results
    delete:
      operationId: ResultsAPI_deleteAll
      description: Delete all *Results*
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - Results
security:
  - BearerAuth: []
components:
  schemas:
    Monitor:
      type: object
      required:
        - id
        - updated
        - name
        - type
        - target
        - interval
        - rule
        - enabled
        - properties
      properties:
        id:
          type: string
          pattern: '[A-Fa-f0-9]{24}'
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of this monitor
        type:
          $ref: '#/components/schemas/MonitorType'
        target:
          type: string
        interval:
          type: string
          format: duration
        rule:
          type: string
        enabled:
          type: boolean
        properties:
          type: object
          additionalProperties:
            type: string
    MonitorType:
      type: string
      enum:
        - http
        - ping
        - tcp
        - dns
    Problem:
      type: object
      required:
        - type
        - title
        - detail
        - instance
        - status
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
        status:
          type: integer
          minimum: 100
          maximum: 599
    Result:
      type: object
      required:
        - date
        - value
        - message
        - monitor_id
        - monitor_name
        - monitor_target
        - status
      properties:
        date:
          type: string
          format: date-time
        value:
          type: number
          format: double
        message:
          type: string
        monitor_id:
          type: string
        monitor_name:
          type: string
        monitor_target:
          type: string
        status:
          type: integer
          format: int32
          minimum: 0
          maximum: 2
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: http://localhost:8000
    description: Local dev server endpoint
    variables: {}
